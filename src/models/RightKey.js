/*
  Auto-generated by Spline
*/

import useSpline from "@splinetool/r3f-spline";
import { OrthographicCamera } from "@react-three/drei";
import { useRef } from "react";
import { animated, useSpring } from "@react-spring/three";
import { useFrame } from "@react-three/fiber";
import { motion, MotionCanvas, LayoutCamera } from "framer-motion-3d";

export default function RightKey({ ...props }) {
  const rightKeyRef = useRef();
  const { position } = useSpring({
    position: [-206.33, props.rightArrowPressed ? -180 : -90, -94.86],
    config: { duration: 150 },
  });
  const sizes = {
    width: window.innerWidth,
    height: window.innerHeight,
  };
  window.addEventListener("resize", () => {
    sizes.width = window.innerWidth;
  });
  useFrame((state, delta) => {
    const t = state.clock.getElapsedTime();

    rightKeyRef.current.rotation.x = Math.PI / 2 / 1.55 + Math.cos(t / 2) / 20;
    rightKeyRef.current.rotation.y = Math.cos(t / 2) / 20;
    rightKeyRef.current.rotation.z = (-0.5 + Math.sin(t / 2)) / 30;
  });
  const { nodes, materials } = useSpline(
    "https://prod.spline.design/wZQv3oiyEY81u1XT/scene.splinecode"
  );
  return (
    <>
      <color args={[""]} />
      <motion.group
        {...props}
        dispose={null}
        initial={{
          y: -30,
          transition: {
            y: {
              duration: 1.5,
              delay: 0.5,
            },
          },
        }}
        animate={{
          y: props.gradientZoom ? -200 : 0,
          transition: {
            y: {
              duration: 1.5,
              delay: 0,
            },
          },
        }}
        scale={0.17}
        position={[700, 0, 0]}
        rotation={[-1.15, Math.PI * 2, Math.PI]} //0.8
      >
        <group
          ref={rightKeyRef}
          name="leftKey"
          rotation={[0, 0, 0]}
          position={[0, 0, 0]}
        >
          <group name="base" position={[-209, 0, -101]}>
            <mesh
              name="whiteBase"
              geometry={nodes.whiteBase.geometry}
              material={materials["whiteBase Material"]}
              castShadow
              receiveShadow
              position={[-27.64, -188.4, 86.93]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[1, 1, 2.15]}
            />
            <mesh
              name="blueBase"
              geometry={nodes.blueBase.geometry}
              material={materials["blueBase Material"]}
              castShadow
              receiveShadow
              position={[-24.68, -139.51, 90.63]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[1, 1, 2.15]}
            />
          </group>
          <animated.group name="key" position={position}>
            <group name="Key Instance 3" position={[-18.1, 68, 0]}>
              <group name="arrowLeft" position={[-18.76, 0, 0]}>
                <mesh
                  name="Rectangle 9"
                  geometry={nodes["Rectangle 9"].geometry}
                  material={materials["Rectangle 9 Material"]}
                  castShadow
                  receiveShadow
                  position={[-8, 197.59, 90.5]}
                  rotation={[-Math.PI / 2, 0, 0]}
                />
                <mesh
                  name="Triangle"
                  geometry={nodes.Triangle.geometry}
                  material={materials["Triangle Material"]}
                  castShadow
                  receiveShadow
                  position={[-41.18, 197.59, 89.21]}
                  rotation={[-1.54, 0, 1.55]}
                  scale={1}
                />
              </group>
              <mesh
                name="Cube"
                geometry={nodes.Cube.geometry}
                material={nodes.Cube.material}
                castShadow
                receiveShadow
                position={[-18.1, 141.64, 92.19]}
              />
            </group>
          </animated.group>
        </group>
        {/* <directionalLight
          name="Directional Light"
          castShadow
          intensity={1.21}
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
          shadow-camera-near={-10000}
          shadow-camera-far={100000}
          shadow-camera-left={-1210.774}
          shadow-camera-right={1210.774}
          shadow-camera-top={1210.774}
          shadow-camera-bottom={-1210.774}
          color="#fefefe"
          position={[154.86, 1304.58, -2219.09]}
          rotation={[0, 0.25, 0]}
        /> */}
        {/* <OrthographicCamera
          name="1"
          makeDefault={true}
          zoom={0.22}
          far={100000}
          near={-100000}
          position={[-425.73, 2347.65, 1964.92]}
          rotation={[-0.87, -0.14, -0.16]}
        /> */}
        {/* <hemisphereLight
          name="Default Ambient Light"
          intensity={0.75}
          color="#eaeaea"
        /> */}
      </motion.group>
    </>
  );
}
